@using System.ComponentModel;
@inject HeaterLevelEditorViewModel HeaterLevelEditorViewModel

@code {
    protected override void OnInitialized()
    {
        HeaterLevelEditorViewModel.PropertyChanged += StateChangedHandler;
    }

    public void Dispose()
    {
        HeaterLevelEditorViewModel.PropertyChanged -= StateChangedHandler;
    }

    private void StateChangedHandler(object? sender, PropertyChangedEventArgs e)
    {
        InvokeAsync(StateHasChanged);
    }
}

<MudGrid>
    <MudItem xs="12">
        <MudText Typo="Typo.h5">Level Settings</MudText>
    </MudItem>
    <MudItem xs="12">
        <MudSelect T="HeaterLevel" Variant="Variant.Outlined" Label="Level"
                   @bind-Value="HeaterLevelEditorViewModel.SelectedLevel">
            <MudSelectItem Value="HeaterLevel.Low" />
            <MudSelectItem Value="HeaterLevel.High" />
        </MudSelect>
    </MudItem>
    <MudItem xs="6">
        <HeaterLevelDurationEditor Label="On Cycle" Setting="HeaterLevelEditorViewModel.OnCycleDuration" />
    </MudItem>
    <MudItem xs="6">
        <HeaterLevelDurationEditor Label="Off Cycle" Setting="HeaterLevelEditorViewModel.OffCycleDuration" />
    </MudItem>
</MudGrid>